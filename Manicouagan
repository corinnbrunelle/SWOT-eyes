# -*- coding: utf-8 -*-
"""
Created on Thu Aug 15 16:30:04 2024
conda activate netcdf_test
@author: cbourgaultbrunelle
"""

#!/usr/bin/env python

import xarray
import sys
from pykml.factory import KML_ElementMaker as kml
#import cmocean
import os
import numpy as np
import matplotlib as mpl
import struct
import simplekml



def main():


  import matplotlib.pyplot as plt
  import cartopy.feature as cfeature
  import cartopy
  import matplotlib as mpl
  import cartopy.crs as ccrs
  from cartopy.mpl.gridliner import LONGITUDE_FORMATTER, LATITUDE_FORMATTER
  import cartopy.feature as cfeature  

  print ('Starting script SWOT_using_dataFrame.py...')
  
  
  print("Generating plot...")



  cmap = mpl.colormaps ['Blues_r'] #['nipy_spectral'] #cmocean.cm.diff
  title = "SWOT water surface elevation (m) "
  lon_min = -70.2#-75.7#-75.0
  lon_max = -67.7#-72.7#-72.4
  lat_min = 50.8 #45.6#45.0
  lat_max = 52.3#47.7 #46.5
  cbar_min = 345. 
  cbar_max = 350
 
  outputPlotFile = r"C:\Users\cbourgaultbrunelle\Documents\SWOT\Case study\manicouagan\SWOT_L2_HR_Raster_100m_UTM19U_N_x_x_x_019_341_123F_20240811T231757_20240811T231818_PIC0_01.png" #sys.argv[1] # input file
  
  inputFile = r"C:\Users\cbourgaultbrunelle\Documents\SWOT\Case study\manicouagan\SWOT_L2_HR_Raster_100m_UTM19U_N_x_x_x_019_341_123F_20240811T231757_20240811T231818_PIC0_01.nc" #sys.argv[1] # input file
  

  dataSet   = xarray.open_dataset(inputFile)
  dataFrame = dataSet.to_dataframe()
  
 
  
  
    
  print('dataFrame columns: ')
  print('******************')
  
  for columnIndex in range(dataFrame.shape[1]):
    print(columnIndex, dataFrame.columns[columnIndex])
  
  print('******************')

  uniqueFlagValues = dataFrame['wse_qual'].unique()
  print('unique flag values: ', uniqueFlagValues)
  
  


  
  dataFrameWithQualityDataOnly = dataFrame[dataFrame['wse_qual'] == 0] #<= , ==
  print(dataFrameWithQualityDataOnly.shape)
  

  
  lon  = dataFrameWithQualityDataOnly['longitude'].to_numpy()
  lat  = dataFrameWithQualityDataOnly['latitude'].to_numpy()
  data = dataFrameWithQualityDataOnly['wse'].to_numpy()
  
 
  
  
  
 
  
  print(lon.min(), lon.max(), lon.shape)
  print(lat.min(), lat.max(), lat.shape)
  print(data.min(), data.max(), data.shape)
  
  
  
  fontsize = 16

  # Plot figure
  #fig = plt.figure(figsize=(15,8))
  fig = plt.figure()
  projection=ccrs.PlateCarree()
  crs=projection

  ax = fig.add_subplot(projection=projection)
  ax.set_extent([lon_min, lon_max, lat_min, lat_max])
  
  land = cfeature.NaturalEarthFeature('physical', 'land', '10m', edgecolor='face', facecolor='gray')
  #ax.add_feature(land)
  
  norm = mpl.colors.Normalize(vmin = cbar_min, vmax = cbar_max)
  plot = ax.scatter(lon, lat, c = data, s = 0.05, marker = "o", edgecolors='none', transform = projection, \
                       cmap = cmap, norm = norm, \
                       zorder = 1, rasterized = False)

                    zorder = 1, rasterized = False)

 
  ax.grid(False) 
  ax.set_facecolor("none")
  
  ax.set_title(title, fontsize = fontsize)

  
  # Colorbar
  cbar = plt.colorbar(plot, ax = ax, extend = 'both',spacing = 'uniform', \
                 orientation = 'horizontal',  shrink = 0.6) #pad = 0.5,
  cbar.ax.tick_params(labelsize = 8)
  cbar.set_label('m')
  fig.tight_layout()
  

  fig.savefig(outputPlotFile, format='png', dpi = 2200., transparent=True)
 
  

##########################################################################

if __name__ == "__main__":
  main()
